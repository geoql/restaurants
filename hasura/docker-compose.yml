version: '3.6'
services:
  db:
    container_name: db
    image: kartoza/postgis:latest
    environment:
      POSTGRES_DBNAME: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASS: '${DB_PASSWORD}'
      POSTGRES_MULTIPLE_EXTENSIONS: 'postgis,hstore,postgis_topology,postgis_raster,pgrouting'
    volumes:
      - postgis-data:/var/lib/postgresql/
    ports:
      - '${DB_PORT}:5432'
    networks:
      - bridge
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "PGPASSWORD=${DB_PASSWORD} pg_isready -h ${DB_HOST} -U ${DB_USERNAME} -d ${DB_DATABASE}"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:latest
    environment:
      HASURA_GRAPHQL_DATABASE_URL: 'postgres://${DB_USERNAME}:${DB_PASSWORD}@db/${DB_DATABASE}'
      HASURA_ENABLE_CONSOLE: '${HASURA_ENABLE_CONSOLE}'
      HASURA_DEV_MODE: '${HASURA_DEV_MODE}'
      HASURA_ENABLED_LOG_TYPES: 'startup, http-log, webhook-log, websocket-log, query-log'
      HASURA_ADMIN_SECRET: '${HASURA_ADMIN_SECRET}'
      HASURA_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      HASURA_GRAPHQL_CORS_DOMAIN: '${HASURA_GRAPHQL_CORS_DOMAIN}'
    ports:
      - '${APP_PORT}:8080'
    networks:
      - bridge
    restart: always
    depends_on:
      data-connector-agent:
        condition: service_healthy
      db:
        condition: service_healthy
  data-connector-agent:
    container_name: data-connector-agent
    image: hasura/graphql-data-connector:latest
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    ports:
      - 8081:8081
    networks:
      - bridge
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081/api/v1/athena/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
    depends_on:
      db:
        condition: service_healthy
volumes:
  postgis-data:
networks:
  bridge:
    driver: 'bridge'
